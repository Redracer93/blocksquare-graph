// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClaimInvestment extends ethereum.Event {
  get params(): ClaimInvestment__Params {
    return new ClaimInvestment__Params(this);
  }
}

export class ClaimInvestment__Params {
  _event: ClaimInvestment;

  constructor(event: ClaimInvestment) {
    this._event = event;
  }

  get property(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class InitialOffer extends ethereum.Event {
  get params(): InitialOffer__Params {
    return new InitialOffer__Params(this);
  }
}

export class InitialOffer__Params {
  _event: InitialOffer;

  constructor(event: InitialOffer) {
    this._event = event;
  }

  get property(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pricePerToken(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get presaleMaxInvestment(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get presaleMinInvestment(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maxInvestment(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get minInvestment(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get softCap(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get presaleStart(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get presaleEnd(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get saleStart(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get saleEnd(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get investmentCurrency(): Address {
    return this._event.parameters[11].value.toAddress();
  }

  get collector(): Address {
    return this._event.parameters[12].value.toAddress();
  }

  get feeCollector(): Address {
    return this._event.parameters[13].value.toAddress();
  }

  get fee(): BigInt {
    return this._event.parameters[14].value.toBigInt();
  }
}

export class InitialOfferingCanceled extends ethereum.Event {
  get params(): InitialOfferingCanceled__Params {
    return new InitialOfferingCanceled__Params(this);
  }
}

export class InitialOfferingCanceled__Params {
  _event: InitialOfferingCanceled;

  constructor(event: InitialOfferingCanceled) {
    this._event = event;
  }

  get property(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Invested extends ethereum.Event {
  get params(): Invested__Params {
    return new Invested__Params(this);
  }
}

export class Invested__Params {
  _event: Invested;

  constructor(event: Invested) {
    this._event = event;
  }

  get property(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get investmentToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountInvested(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountReceived(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReturnedInvestment extends ethereum.Event {
  get params(): ReturnedInvestment__Params {
    return new ReturnedInvestment__Params(this);
  }
}

export class ReturnedInvestment__Params {
  _event: ReturnedInvestment;

  constructor(event: ReturnedInvestment) {
    this._event = event;
  }

  get proeprty(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReturnedPresaleInvestment extends ethereum.Event {
  get params(): ReturnedPresaleInvestment__Params {
    return new ReturnedPresaleInvestment__Params(this);
  }
}

export class ReturnedPresaleInvestment__Params {
  _event: ReturnedPresaleInvestment;

  constructor(event: ReturnedPresaleInvestment) {
    this._event = event;
  }

  get proeprty(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get wallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class InitialInvestment__offeringInfoResultValue0Struct extends ethereum.Tuple {
  get presaleStart(): BigInt {
    return this[0].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[1].toBigInt();
  }

  get saleStart(): BigInt {
    return this[2].toBigInt();
  }

  get saleEnd(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get amountCollected(): BigInt {
    return this[5].toBigInt();
  }

  get presaleCollected(): BigInt {
    return this[6].toBigInt();
  }

  get presaleMaxInvestment(): BigInt {
    return this[7].toBigInt();
  }

  get presaleMinInvestment(): BigInt {
    return this[8].toBigInt();
  }

  get maxInvestment(): BigInt {
    return this[9].toBigInt();
  }

  get minInvestment(): BigInt {
    return this[10].toBigInt();
  }

  get softCap(): BigInt {
    return this[11].toBigInt();
  }

  get investmentToken(): Address {
    return this[12].toAddress();
  }

  get collector(): Address {
    return this[13].toAddress();
  }

  get feeCollector(): Address {
    return this[14].toAddress();
  }

  get fee(): BigInt {
    return this[15].toBigInt();
  }

  get investmentCollected(): boolean {
    return this[16].toBoolean();
  }
}

export class InitialInvestment extends ethereum.SmartContract {
  static bind(address: Address): InitialInvestment {
    return new InitialInvestment("InitialInvestment", address);
  }

  currentInvestmentByUser(property: Address, wallet: Address): BigInt {
    let result = super.call(
      "currentInvestmentByUser",
      "currentInvestmentByUser(address,address):(uint256)",
      [ethereum.Value.fromAddress(property), ethereum.Value.fromAddress(wallet)]
    );

    return result[0].toBigInt();
  }

  try_currentInvestmentByUser(
    property: Address,
    wallet: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentInvestmentByUser",
      "currentInvestmentByUser(address,address):(uint256)",
      [ethereum.Value.fromAddress(property), ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentInvestmentByWallet(property: Address, wallet: Address): BigInt {
    let result = super.call(
      "currentInvestmentByWallet",
      "currentInvestmentByWallet(address,address):(uint256)",
      [ethereum.Value.fromAddress(property), ethereum.Value.fromAddress(wallet)]
    );

    return result[0].toBigInt();
  }

  try_currentInvestmentByWallet(
    property: Address,
    wallet: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentInvestmentByWallet",
      "currentInvestmentByWallet(address,address):(uint256)",
      [ethereum.Value.fromAddress(property), ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentSupply(property: Address): BigInt {
    let result = super.call(
      "currentSupply",
      "currentSupply(address):(uint256)",
      [ethereum.Value.fromAddress(property)]
    );

    return result[0].toBigInt();
  }

  try_currentSupply(property: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentSupply",
      "currentSupply(address):(uint256)",
      [ethereum.Value.fromAddress(property)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentUserPresaleInvestment(property: Address, wallet: Address): BigInt {
    let result = super.call(
      "currentUserPresaleInvestment",
      "currentUserPresaleInvestment(address,address):(uint256)",
      [ethereum.Value.fromAddress(property), ethereum.Value.fromAddress(wallet)]
    );

    return result[0].toBigInt();
  }

  try_currentUserPresaleInvestment(
    property: Address,
    wallet: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentUserPresaleInvestment",
      "currentUserPresaleInvestment(address,address):(uint256)",
      [ethereum.Value.fromAddress(property), ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hardCap(property: Address): BigInt {
    let result = super.call("hardCap", "hardCap(address):(uint256)", [
      ethereum.Value.fromAddress(property)
    ]);

    return result[0].toBigInt();
  }

  try_hardCap(property: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("hardCap", "hardCap(address):(uint256)", [
      ethereum.Value.fromAddress(property)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  offeringInfo(
    property: Address
  ): InitialInvestment__offeringInfoResultValue0Struct {
    let result = super.call(
      "offeringInfo",
      "offeringInfo(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,uint256,bool))",
      [ethereum.Value.fromAddress(property)]
    );

    return changetype<InitialInvestment__offeringInfoResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_offeringInfo(
    property: Address
  ): ethereum.CallResult<InitialInvestment__offeringInfoResultValue0Struct> {
    let result = super.tryCall(
      "offeringInfo",
      "offeringInfo(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,address,address,uint256,bool))",
      [ethereum.Value.fromAddress(property)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<InitialInvestment__offeringInfoResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get dataProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get users(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelOfferingCall extends ethereum.Call {
  get inputs(): CancelOfferingCall__Inputs {
    return new CancelOfferingCall__Inputs(this);
  }

  get outputs(): CancelOfferingCall__Outputs {
    return new CancelOfferingCall__Outputs(this);
  }
}

export class CancelOfferingCall__Inputs {
  _call: CancelOfferingCall;

  constructor(call: CancelOfferingCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CancelOfferingCall__Outputs {
  _call: CancelOfferingCall;

  constructor(call: CancelOfferingCall) {
    this._call = call;
  }
}

export class ChangeDataProxyCall extends ethereum.Call {
  get inputs(): ChangeDataProxyCall__Inputs {
    return new ChangeDataProxyCall__Inputs(this);
  }

  get outputs(): ChangeDataProxyCall__Outputs {
    return new ChangeDataProxyCall__Outputs(this);
  }
}

export class ChangeDataProxyCall__Inputs {
  _call: ChangeDataProxyCall;

  constructor(call: ChangeDataProxyCall) {
    this._call = call;
  }

  get dataProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeDataProxyCall__Outputs {
  _call: ChangeDataProxyCall;

  constructor(call: ChangeDataProxyCall) {
    this._call = call;
  }
}

export class ChangeUsersCall extends ethereum.Call {
  get inputs(): ChangeUsersCall__Inputs {
    return new ChangeUsersCall__Inputs(this);
  }

  get outputs(): ChangeUsersCall__Outputs {
    return new ChangeUsersCall__Outputs(this);
  }
}

export class ChangeUsersCall__Inputs {
  _call: ChangeUsersCall;

  constructor(call: ChangeUsersCall) {
    this._call = call;
  }

  get users(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeUsersCall__Outputs {
  _call: ChangeUsersCall;

  constructor(call: ChangeUsersCall) {
    this._call = call;
  }
}

export class CollectInvestmentsCall extends ethereum.Call {
  get inputs(): CollectInvestmentsCall__Inputs {
    return new CollectInvestmentsCall__Inputs(this);
  }

  get outputs(): CollectInvestmentsCall__Outputs {
    return new CollectInvestmentsCall__Outputs(this);
  }
}

export class CollectInvestmentsCall__Inputs {
  _call: CollectInvestmentsCall;

  constructor(call: CollectInvestmentsCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CollectInvestmentsCall__Outputs {
  _call: CollectInvestmentsCall;

  constructor(call: CollectInvestmentsCall) {
    this._call = call;
  }
}

export class GetInvestmentBackCall extends ethereum.Call {
  get inputs(): GetInvestmentBackCall__Inputs {
    return new GetInvestmentBackCall__Inputs(this);
  }

  get outputs(): GetInvestmentBackCall__Outputs {
    return new GetInvestmentBackCall__Outputs(this);
  }
}

export class GetInvestmentBackCall__Inputs {
  _call: GetInvestmentBackCall;

  constructor(call: GetInvestmentBackCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GetInvestmentBackCall__Outputs {
  _call: GetInvestmentBackCall;

  constructor(call: GetInvestmentBackCall) {
    this._call = call;
  }
}

export class InvestCall extends ethereum.Call {
  get inputs(): InvestCall__Inputs {
    return new InvestCall__Inputs(this);
  }

  get outputs(): InvestCall__Outputs {
    return new InvestCall__Outputs(this);
  }
}

export class InvestCall__Inputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InvestCall__Outputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }
}

export class MintPresaleCall extends ethereum.Call {
  get inputs(): MintPresaleCall__Inputs {
    return new MintPresaleCall__Inputs(this);
  }

  get outputs(): MintPresaleCall__Outputs {
    return new MintPresaleCall__Outputs(this);
  }
}

export class MintPresaleCall__Inputs {
  _call: MintPresaleCall;

  constructor(call: MintPresaleCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wallets(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class MintPresaleCall__Outputs {
  _call: MintPresaleCall;

  constructor(call: MintPresaleCall) {
    this._call = call;
  }
}

export class ModifyOfferingInfoCall extends ethereum.Call {
  get inputs(): ModifyOfferingInfoCall__Inputs {
    return new ModifyOfferingInfoCall__Inputs(this);
  }

  get outputs(): ModifyOfferingInfoCall__Outputs {
    return new ModifyOfferingInfoCall__Outputs(this);
  }
}

export class ModifyOfferingInfoCall__Inputs {
  _call: ModifyOfferingInfoCall;

  constructor(call: ModifyOfferingInfoCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOffering(): ModifyOfferingInfoCallNewOfferingStruct {
    return changetype<ModifyOfferingInfoCallNewOfferingStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class ModifyOfferingInfoCall__Outputs {
  _call: ModifyOfferingInfoCall;

  constructor(call: ModifyOfferingInfoCall) {
    this._call = call;
  }
}

export class ModifyOfferingInfoCallNewOfferingStruct extends ethereum.Tuple {
  get presaleStart(): BigInt {
    return this[0].toBigInt();
  }

  get presaleEnd(): BigInt {
    return this[1].toBigInt();
  }

  get saleEnd(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get presaleMaxInvestment(): BigInt {
    return this[4].toBigInt();
  }

  get presaleMinInvestment(): BigInt {
    return this[5].toBigInt();
  }

  get maxInvestment(): BigInt {
    return this[6].toBigInt();
  }

  get minInvestment(): BigInt {
    return this[7].toBigInt();
  }

  get softCap(): BigInt {
    return this[8].toBigInt();
  }

  get investmentToken(): Address {
    return this[9].toAddress();
  }

  get collector(): Address {
    return this[10].toAddress();
  }

  get feeCollector(): Address {
    return this[11].toAddress();
  }

  get fee(): BigInt {
    return this[12].toBigInt();
  }
}

export class RecoverDAICall extends ethereum.Call {
  get inputs(): RecoverDAICall__Inputs {
    return new RecoverDAICall__Inputs(this);
  }

  get outputs(): RecoverDAICall__Outputs {
    return new RecoverDAICall__Outputs(this);
  }
}

export class RecoverDAICall__Inputs {
  _call: RecoverDAICall;

  constructor(call: RecoverDAICall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wallet(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RecoverDAICall__Outputs {
  _call: RecoverDAICall;

  constructor(call: RecoverDAICall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReturnInvestmentCall extends ethereum.Call {
  get inputs(): ReturnInvestmentCall__Inputs {
    return new ReturnInvestmentCall__Inputs(this);
  }

  get outputs(): ReturnInvestmentCall__Outputs {
    return new ReturnInvestmentCall__Outputs(this);
  }
}

export class ReturnInvestmentCall__Inputs {
  _call: ReturnInvestmentCall;

  constructor(call: ReturnInvestmentCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wallets(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ReturnInvestmentCall__Outputs {
  _call: ReturnInvestmentCall;

  constructor(call: ReturnInvestmentCall) {
    this._call = call;
  }
}

export class ReturnPresaleInvestmentCall extends ethereum.Call {
  get inputs(): ReturnPresaleInvestmentCall__Inputs {
    return new ReturnPresaleInvestmentCall__Inputs(this);
  }

  get outputs(): ReturnPresaleInvestmentCall__Outputs {
    return new ReturnPresaleInvestmentCall__Outputs(this);
  }
}

export class ReturnPresaleInvestmentCall__Inputs {
  _call: ReturnPresaleInvestmentCall;

  constructor(call: ReturnPresaleInvestmentCall) {
    this._call = call;
  }

  get property(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get wallets(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ReturnPresaleInvestmentCall__Outputs {
  _call: ReturnPresaleInvestmentCall;

  constructor(call: ReturnPresaleInvestmentCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
